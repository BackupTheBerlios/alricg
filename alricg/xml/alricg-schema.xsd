<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
 * Created on 17.12.2004
 *
 * This file is part of the project ALRICG. The file is copyright
 * protected an under the GPL licence.
 * For more information see "http://alricg.die3sphaere.de/".
 *
-->
<xsd:schema targetNamespace="http://www.die3sphaere.de/alricg" xmlns="http://www.die3sphaere.de/alricg" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:annotation>
		<xsd:documentation xml:lang="DE">
			Schema-file für ALRICG. Alle Daten aus der XML-Datenbasis können mit diesem File validiert werden.
			
			kommentar - Anmerkungen, die nur für Entwickler gedacht sind
			beschreibung - Text der für Benutzer gedacht ist
			benoetigtDateien - Dateien, auf die DIESE Datei zugreift (wird auto. 
				erstellt)
		</xsd:documentation>
	</xsd:annotation>
	<!-- Einbinden der Basis Typen -->
	<xsd:include schemaLocation="alricg-basis-schema.xsd"/>
	<xsd:element name="alricgXML">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="kommentar" type="xsd:string" minOccurs="0"/>
				<xsd:element name="beschreibung" type="xsd:string" minOccurs="0"/>
				<xsd:element name="autor" type="xsd:string" minOccurs="0"/>
				<xsd:element name="version" type="xsd:string" minOccurs="0"/>
				<xsd:element name="benoetigtDateien" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="datei" type="xsd:string" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="rassen" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="rasse" type="rasseTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="kulturen" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="kultur" type="kulturTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="professionen" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="profession" type="professionTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="vorteile" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="vorteil" type="vorteilTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="nachteile" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="nachteil" type="nachteilTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="sonderfertigkeiten" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="sondef" type="sondefTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="talente" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="talent" type="talentTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="sprachen" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="sprache" type="sprachTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="schriften" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="schrift" type="schriftTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="zauber" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="zauber" type="zauberTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="liturgien" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="liturgie" type="ritualLiturgieTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="rituale" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="ritual" type="ritualLiturgieTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="waffen" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="waffe" type="waffenTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="fkWaffen" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="fkWaffe" type="fkWaffenTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="schilde" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="schildl" type="schildTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ausruestung" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="gegenstand" type="ausruestungTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="namensRegionen" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="namensRegion" type="namensRegionTyp" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<!-- <xsd:element name="datenBasis" type="datenBasisTyp" minOccurs="0"/> -->
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<!-- ############################################ RASSE ########################################### -->
	<xsd:complexType name="rasseTyp">
		<xsd:complexContent>
			<xsd:extension base="herkunftTyp">
				<xsd:sequence>
					<xsd:element name="kulturUeblich" type="idListe" minOccurs="0"/>
					<xsd:element name="kulturMoeglich" type="idListe" minOccurs="0"/>
					<xsd:element name="geschwindigkeit" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:element name="alter">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="wuerfel" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:attribute name="anzWuerfel" type="xsd:positiveInteger" use="required"/>
										<xsd:attribute name="augenWuerfel" type="xsd:positiveInteger" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
							<xsd:attribute name="wert" type="xsd:positiveInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="groesse">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="wuerfel" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:attribute name="anzWuerfel" type="xsd:positiveInteger" use="required"/>
										<xsd:attribute name="augenWuerfel" type="xsd:positiveInteger" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
							<xsd:attribute name="wert" type="xsd:positiveInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="gewichtModi">
						<xsd:complexType>
							<xsd:attribute name="wert" type="xsd:negativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="haarfarbe">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="farbe" maxOccurs="20">
									<xsd:complexType>
										<xsd:attribute name="farbe" type="xsd:string" use="required"/>
										<xsd:attribute name="wuerfelWurf" type="xsd:positiveInteger" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="augenfarbe">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="farbe" maxOccurs="20">
									<xsd:complexType>
										<xsd:attribute name="farbe" type="xsd:string" use="required"/>
										<xsd:attribute name="wuerfelWurf" type="xsd:positiveInteger" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ KULTUR ########################################### -->
	<xsd:complexType name="kulturTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				namensRegion - Die ID einer NamensRegion, aus dem der Name (Typischer Weise) stammt.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="herkunftTyp">
				<xsd:sequence>
					<xsd:element name="namensRegion" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="professionUeblich" type="idListe" minOccurs="0"/>
					<xsd:element name="professionMoeglich" type="idListe" minOccurs="0"/>
					<xsd:element name="muttersprache" type="auswahlTyp"/>
					<xsd:element name="zweitsprache" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="sprachen" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="schriften" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="ausruestung" type="auswahlGegenstandTyp" minOccurs="0"/>
					<!-- Bei Sprachen und schriften sind als ID auch erlaubt: "muttersprache" und "mutterspracheSchrift" -->
					<!-- haben die Elfen -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ########################################## PROFESSION ######################################### -->
	<xsd:complexType name="professionTyp">
		<xsd:complexContent>
			<xsd:extension base="herkunftTyp">
				<xsd:sequence>
					<xsd:element name="art">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="handwerklich"/>
								<xsd:enumeration value="kriegerisch"/>
								<xsd:enumeration value="gesellschaftlich"/>
								<xsd:enumeration value="wildnis"/>
								<xsd:enumeration value="magisch"/>
								<xsd:enumeration value="geweiht"/>
								<xsd:enumeration value="schamanisch"/>
							</xsd:restriction>
						</xsd:simpleType>
						<!-- in erster Line für eine bessere Anordnung der Elemenet -->
					</xsd:element>
					<xsd:element name="verboteVT" type="idListe" minOccurs="0"/>
					<xsd:element name="verboteNT" type="idListe" minOccurs="0"/>
					<xsd:element name="verboteSF" type="idListe" minOccurs="0"/>
					<xsd:element name="sprachen" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="schriften" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="ausruestung" type="auswahlGegenstandTyp"/>
					<xsd:element name="besondererBesitz" type="auswahlGegenstandTyp" minOccurs="0"/>
					<!-- Verbote sind nicht erlaubte Eigenschaften, die als Voraussetzung gelten -->
				</xsd:sequence>
				<xsd:attribute name="aufwand" use="optional">
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:enumeration value="zeitaufwendig"/>
							<xsd:enumeration value="erstprofession"/>
							<xsd:enumeration value="zusatzprofession"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Sonderfertigkeit ########################################### -->
	<!-- sammelbegriffe: Repräsentation, Ritualkenntnis, Gabe -->
	<xsd:complexType name="sondefTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				ap - Kosten in Abenteuerpunkten -> GP = (AP / 50)
				gp - Falls die GP nicht nach der Formel aus den AP errechnet werden können, werde sie hier etxra angegeben! 
				permX - Kosten die beim erlernen permanent abgezogen werden!
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="fertigkeitTyp">
				<xsd:sequence>
					<xsd:element name="permAsP" type="xsd:int"/>
					<xsd:element name="permKa" type="xsd:int"/>
					<xsd:element name="permLeP" type="xsd:int"/>
					<xsd:element name="art">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="waffenlosKampf"/>
								<xsd:enumeration value="bewaffnetKampf"/>
								<xsd:enumeration value="magisch"/>
								<xsd:enumeration value="geweiht"/>
								<xsd:enumeration value="schamanisch"/>
								<xsd:enumeration value="sonstige"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="voraussetzungen" type="voraussetzungTyp" minOccurs="0" maxOccurs="unbounded">
						<!-- Es mußnur EINE der Voraussetzungen gelten! (So werden die "oders" nachgebildet) -->
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="ap" type="xsd:nonNegativeInteger" use="required"/>
				<xsd:attribute name="gp" type="xsd:nonNegativeInteger" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Vorteil ########################################### -->
	<xsd:complexType name="vorteilTyp">
		<xsd:complexContent>
			<xsd:extension base="fertigkeitTyp">
				<xsd:sequence>
					<xsd:element name="istGabe" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="istMehrfachWaehlbar" type="xsd:boolean"/>
					<xsd:element name="stufenGrenzen" minOccurs="0">
						<xsd:complexType>
							<xsd:attribute name="minStufe" type="xsd:nonNegativeInteger" use="optional"/>
							<xsd:attribute name="maxStufe" type="xsd:nonNegativeInteger" use="optional"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="verbietetVorteil" type="idListe" minOccurs="0"/>
					<xsd:element name="verbietetNachteil" type="idListe" minOccurs="0"/>
					<xsd:element name="aendertApSf" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="aendertGpVorteil" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="aendertGpNachteil" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="voraussetzungen" type="voraussetzungTyp" minOccurs="0" maxOccurs="unbounded"/>
					<!-- Es muß nur EINE der Voraussetzungen gelten! (So werden die "oders" nachgebildet) -->
				</xsd:sequence>
				<xsd:attribute name="gp" type="xsd:nonNegativeInteger" use="required"/>
				<xsd:attribute name="proPunkte" type="xsd:nonNegativeInteger" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Nachteil ########################################### -->
	<xsd:complexType name="nachteilTyp">
		<xsd:complexContent>
			<xsd:extension base="fertigkeitTyp">
				<xsd:sequence>
					<xsd:element name="istSchlechteEigen" type="xsd:boolean"/>
					<xsd:element name="istMehrfachWaehlbar" type="xsd:boolean"/>
					<xsd:element name="stufenGrenzen" minOccurs="0">
						<xsd:complexType>
							<xsd:attribute name="minStufe" type="xsd:nonNegativeInteger" use="optional"/>
							<xsd:attribute name="maxStufe" type="xsd:nonNegativeInteger" use="optional"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="verbietetVorteil" type="idListe" minOccurs="0"/>
					<xsd:element name="verbietetNachteil" type="idListe" minOccurs="0"/>
					<xsd:element name="aendertApSf" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="aendertGpVorteil" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="aendertGpNachteil" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="voraussetzungen" type="voraussetzungTyp" minOccurs="0" maxOccurs="unbounded"/>
					<!-- Es muß nur EINE der Voraussetzungen gelten! (So werden die "oders" nachgebildet) -->
				</xsd:sequence>
				<xsd:attribute name="gp" type="xsd:nonPositiveInteger" use="required"/>
				<xsd:attribute name="proPunkte" type="xsd:nonNegativeInteger" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Talent ########################################### -->
	<xsd:complexType name="talentTyp">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="art">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="basis"/>
								<xsd:enumeration value="spezial"/>
								<xsd:enumeration value="beruf"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="sorte">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="kampf"/>
								<xsd:enumeration value="koerper"/>
								<xsd:enumeration value="gesellschaft"/>
								<xsd:enumeration value="natur"/>
								<xsd:enumeration value="wissen"/>
								<xsd:enumeration value="handwerk"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="kostenKlasse" type="kostenKlasseTyp"/>
					<xsd:element name="eigenschaften" type="dreiEigenschaftenTyp"/>
					<xsd:element name="voraussetzungTalent" type="voraussetzungTyp" minOccurs="0" maxOccurs="unbounded"/>
					<!-- Es muß nur EINE der Voraussetzungen gelten! (So werden die "oders" nachgebildet) -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Sprache ########################################### -->
	<xsd:complexType name="sprachTyp">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="kostenKlasse" type="kostenKlasseTyp"/>
					<xsd:element name="komplexitaet" type="xsd:positiveInteger"/>
					<xsd:element name="komplexitaetMuttersprache" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:element name="schriftId" type="idListe"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Schrift ########################################### -->
	<xsd:complexType name="schriftTyp">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="kostenKlasse" type="kostenKlasseTyp"/>
					<xsd:element name="komplexitaet" type="xsd:positiveInteger"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Zauber ########################################### -->
	<xsd:complexType name="zauberTyp">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="kostenKlasse" type="kostenKlasseTyp"/>
					<xsd:element name="merkmale" type="magieMerkmaleTyp" maxOccurs="unbounded"/>
					<xsd:element name="verbreitung" maxOccurs="unbounded">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="repraesentation" type="repraesentationTyp"/>
								<xsd:element name="wert">
									<xsd:simpleType>
										<xsd:restriction base="xsd:positiveInteger">
											<xsd:maxInclusive value="7"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="eigenschaften" type="dreiEigenschaftenTyp"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Liturgien & Rituale ########################################### -->
	<xsd:complexType name="ritualLiturgieTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				additionsId - Id von gleichartigen Liturgien, diese ist wichtig da
					bei zusammengehörigen Liturgien kosten anderes berechnet werden
				permanenteKaKosten - Es kann (evtl.) permanente KA kosten, wenn
					eine Liturgie gelernt wird (NICHT Ausführung)
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="grad" type="xsd:nonNegativeInteger"/>
					<xsd:element name="additionsId" type="xsd:string" minOccurs="0"/>
					<xsd:element name="permanenteKaKosten" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="herkunft" type="xsd:string" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Ausrüstung ########################################### -->
	<xsd:complexType name="ausruestungTyp">
		<xsd:complexContent>
			<xsd:extension base="gegenstandTyp">
				<xsd:sequence>
					<xsd:element name="haltbarkeit" type="xsd:string" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Waffen ########################################### -->
	<xsd:complexType name="waffenTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				tp-W6 - Anzahl an W6
				tp-W20 - Anzahl an W20
				tp-plus - Hinzuaddierte Trefferpunkte
				tp-kk-ab - Ab wann es einen +1 Trefferpunkte-Bonus gibt
				tp-kk-stufe - Ab wann es weiter (ja +1) TP-Boni gibt
				wm-at - WM auf AT
				wm-pa - WM auf PA
				talentId - Mit welchen Talent(en) diese Waffe angewendet werden kann.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gegenstandTyp">
				<xsd:sequence>
					<xsd:element name="tp-W6" type="xsd:nonNegativeInteger"/>
					<xsd:element name="tp-W20" type="xsd:nonNegativeInteger"/>
					<xsd:element name="tp-plus" type="xsd:int"/>
					<xsd:element name="tp-kk-ab" type="xsd:nonNegativeInteger"/>
					<xsd:element name="tp-kk-stufe" type="xsd:nonNegativeInteger"/>
					<xsd:element name="laenge" type="xsd:nonNegativeInteger"/>
					<xsd:element name="bf" type="xsd:int"/>
					<xsd:element name="ini" type="xsd:int"/>
					<xsd:element name="wm-at" type="xsd:int"/>
					<xsd:element name="wm-pa" type="xsd:int"/>
					<xsd:element name="dk" type="xsd:string"/>
					<xsd:element name="talentId" type="xsd:string" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Schilder ########################################### -->
	<xsd:complexType name="schildTyp">
		<xsd:complexContent>
			<xsd:extension base="gegenstandTyp">
				<xsd:sequence>
					<xsd:element name="typ" type="xsd:string"/>
					<xsd:element name="bf" type="xsd:int"/>
					<xsd:element name="ini" type="xsd:int"/>
					<xsd:element name="wm-at" type="xsd:int"/>
					<xsd:element name="wm-pa" type="xsd:int"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ FK-Waffen ########################################### -->
	<xsd:complexType name="fkWaffenTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				tp-W6 - Anzahl an W6
				tp-W20 - Anzahl an W20
				tp-plus - Hinzuaddierte Trefferpunkte
				talentId - Mit welchen Talent(en) diese Waffe angewendet werden kann.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gegenstandTyp">
				<xsd:sequence>
					<xsd:element name="tp-W6" type="xsd:nonNegativeInteger"/>
					<xsd:element name="tp-W20" type="xsd:nonNegativeInteger"/>
					<xsd:element name="tp-plus" type="xsd:int"/>
					<xsd:element name="tp-plus-reichweite" type="xsd:string"/>
					<xsd:element name="reichweite" type="xsd:string"/>
					<xsd:element name="laenge" type="xsd:nonNegativeInteger"/>
					<xsd:element name="landen" type="xsd:int"/>
					<xsd:element name="ini" type="xsd:int"/>
					<xsd:element name="talentId" type="xsd:string" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="geschossTyp">
		<xsd:complexContent>
			<xsd:extension base="gegenstandTyp">
				<xsd:sequence>
					<xsd:element name="fuerWaffe" type="xsd:string"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Rüstungen ########################################### -->
	<xsd:complexType name="ruestungTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				tp-W6 - Anzahl an W6
				tp-W20 - Anzahl an W20
				tp-plus - Hinzuaddierte Trefferpunkte
				talentId - Mit welchen Talent(en) diese Waffe angewendet werden kann.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="gegenstandTyp">
				<xsd:sequence>
					<xsd:element name="zonen" minOccurs="0">
						<xsd:complexType>
							<xsd:attribute name="ko" type="xsd:nonNegativeInteger" use="required"/>
							<xsd:attribute name="br" type="xsd:nonNegativeInteger" use="required"/>
							<xsd:attribute name="rue" type="xsd:nonNegativeInteger" use="required"/>
							<xsd:attribute name="ba" type="xsd:nonNegativeInteger" use="required"/>
							<xsd:attribute name="la" type="xsd:nonNegativeInteger" use="required"/>
							<xsd:attribute name="ra" type="xsd:nonNegativeInteger" use="required"/>
							<xsd:attribute name="lb" type="xsd:nonNegativeInteger" use="required"/>
							<xsd:attribute name="rb" type="xsd:nonNegativeInteger" use="required"/>
							<xsd:attribute name="ges" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="gRs" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="gBe" type="xsd:nonNegativeInteger"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Namensregionen ########################################### -->
	<xsd:complexType name="namensRegionTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				Steht für eine Region mit ihren typischen Namen.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="bindeWortMann" type="xsd:string"/>
			<xsd:element name="bindeWortFrau" type="xsd:string"/>
			<xsd:element name="vornamenMann">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="name" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vornamenFrau">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="name" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="nachnamen">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="name" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="anmerkung" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
		<xsd:attribute name="bezeichnung" type="xsd:string" use="required"/>
		<xsd:attribute name="einordnung" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<!-- ***************************************************************************************************************-->
	<!-- ***********************************                    VererbungsTypen              *************************** -->
	<!--**************************************************************************************************************** -->
	<xsd:complexType name="gegenstandTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				Grundtype für alle Gegenstände wie Waffen, Rüstungen und normaler Ausrüstung!
				einordnung - Zur besseren Sortierung. Hier kann etwas wie "Pflanze", "Trank", "Kleidung" o.ä. angegeben werden.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="gewicht" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="wert" type="xsd:string" minOccurs="0"/>
			<xsd:element name="anmerkung" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
		<xsd:attribute name="bezeichnung" type="xsd:string" use="required"/>
		<xsd:attribute name="einordnung" type="xsd:string" use="optional"/>
	</xsd:complexType>
<!--**************************************************************************************************************** -->	
	<xsd:complexType name="faehigkeitTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				Grundtype fuer alle Faehigkeiten (alles was ein Char wählen kann)
				- Beschreibung: Allgemeine Beschreibung der Fähigkeit
				- regelAnmerkung: Eine Sammlung von Anmerkungen zu den Reglen,
					die das Programm nicht automatisch erledigen kann
				- sammelbegriff: Oberbegriffe (z.B. Zwerge) zur besseren Sortierung
				- sonderregel: Id zu einer Sonderregel
				- anzeigen: Soll dieses Element normal angezeigt werden, oder steht es an 
						anderer Stelle im Programm zur Auswahl. Das Element wird grau dargestellt,
						will man es wählen erscheint der Text ("Kann nur bei ... gewählt werden.")
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="beschreibung" type="xsd:string" minOccurs="0"/>
			<xsd:element name="anzeigen" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="text" type="xsd:string"/>
					</xsd:sequence>
					<xsd:attribute name="anzeigen" type="xsd:boolean" use="required"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="regelAnmerkung" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="regel" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="sammelbegriff" type="xsd:string" minOccurs="0"/>
			<!-- Seitenzahl -->
			<!-- Z.B. "Rituale" Zur besseren Ordnung gleichartiger Elemente -->
		</xsd:sequence>
		<xsd:attribute name="sonderRegel" type="xsd:string" use="optional"/>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
		<!-- Fuer handling in Java -->
	</xsd:complexType>
	<!--***************************************************************************************************** -->
	<xsd:complexType name="fertigkeitTyp">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:annotation>
					<xsd:documentation xml:lang="DE">
						Grundtype fuer alle Vor-/ Nachteil und SF
						Falls eine Fertigkeit mehrfach erlangt wird (durch Rasse, Kultur und Prof.):
						- additionsId: Eine "Familie" von Fertigkeiten, die zueinander 
							aufaddiert werden z.B. Rüstungsgewöhnung I und RG II
						- additionsWert: z.B. Rüstungsgewöhnung I = 1 und RG II = 2. Somit ergibt zwei mal
							RG I --> ein mal RG II (sieht AH S.10)
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name="additionsId" type="xsd:string" minOccurs="0"/>
					<xsd:element name="additionsWert" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="hatText" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="istWaehlbar" type="xsd:boolean"/>
					<xsd:element name="fuerWelcheChars" type="charArtenTyp" maxOccurs="6"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--***************************************************************************************************** -->
	<xsd:complexType name="herkunftTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				Grundtype für Rasse, Kultur, Profession
				varianteVon - Diese Herkunft ist eine Variante einer anderen
				kannGewaehltWerden - Kann die Herkunft nicht gewählt werden,
					so handelt es sich um einen "Varianten Rumpf", also einen
					"Vater" von Varianten, der aber selbst nicht w_bar ist.
					Default: true
				geschlecht - Diese Herkunft ist nur für bestimmtes Geschlecht
					möglich
					Default: MW (Also beide Geschlechter)
				zauberNichtZuBegin - Diese Zauber kann diese Profession zwar Prinzipiell
					Erlernen, aber nicht zu spielbegin.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="gp" type="xsd:nonNegativeInteger"/>
					<xsd:element name="varianteVon" type="xsd:string" minOccurs="0"/>
					<xsd:element name="kannGewaehltWerden" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="geschlecht" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="M"/>
								<xsd:enumeration value="W"/>
								<xsd:enumeration value="MW"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="eigenschaftModi" type="auswahlEigenschaftTyp" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="erweiterteEigenschaftModi">
						<xsd:complexType>
							<xsd:attribute name="lepModi" type="xsd:int" use="optional"/>
							<xsd:attribute name="aupModi" type="xsd:int" use="optional"/>
							<xsd:attribute name="aspModi" type="xsd:int" use="optional"/>
							<xsd:attribute name="kaModi" type="xsd:int" use="optional"/>
							<xsd:attribute name="mrModi" type="xsd:int" use="optional"/>
							<xsd:attribute name="soModi" type="xsd:int" use="optional"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="soGrenzen" minOccurs="0">
						<xsd:complexType>
							<xsd:attribute name="soMin" type="xsd:nonNegativeInteger" use="optional"/>
							<xsd:attribute name="soMax" type="xsd:nonNegativeInteger" use="optional"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="eigenschaftVoraussetzung" type="auswahlEigenschaftTyp" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="vorteile" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="nachteile" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="sonderf" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="liturgien" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="goetterRituale" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="empfVorteile" type="idListe" minOccurs="0"/>
					<xsd:element name="empfNachteile" type="idListe" minOccurs="0"/>
					<xsd:element name="ungeVorteile" type="idListe" minOccurs="0"/>
					<xsd:element name="ungeNachteile" type="idListe" minOccurs="0"/>
					<xsd:element name="verbilligteSonderf" type="idListe" minOccurs="0"/>
					<xsd:element name="verbilligteLiturgien" type="idListe" minOccurs="0"/>
					<xsd:element name="verbilligteRituale" type="idListe" minOccurs="0"/>
					<xsd:element name="talente" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="hauszauber" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="zauber" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="aktivierbareZauber" type="idListe" minOccurs="0"/>
					<xsd:element name="zauberNichtZuBegin" type="idListe" minOccurs="0"/>
					<!-- <xsd:element name="verbilligteVorteile" type="auswahlTyp" minOccurs="0"/>
					<xsd:element name="verbilligteNachteile" type="auswahlTyp" minOccurs="0"/> -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ************************************************************************************************************* -->
	<!-- ***********************************                  BasisTypen           *********************************** -->
	<!--************************************************************************************************************** -->
	<xsd:complexType name="dreiEigenschaftenTyp">
		<xsd:attribute name="eigen1" type="eigenschaftTyp" use="required"/>
		<xsd:attribute name="eigen2" type="eigenschaftTyp" use="required"/>
		<xsd:attribute name="eigen3" type="eigenschaftTyp" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="eigenschaftModiTyp">
		<xsd:attribute name="eigenschaft" type="eigenschaftTyp" use="required"/>
		<xsd:attribute name="wert" type="xsd:int" use="required"/>
		<xsd:attribute name="maximum" type="xsd:boolean" use="optional"/>
		<!-- Bei voraussetzungen wichtig: Ist das Wert ein Minimum (default) oder maximum!-->
	</xsd:complexType>
	<!--********************************************************************************************************* -->
	<xsd:complexType name="auswahlTyp">
		<xsd:sequence>
			<xsd:element name="fest" type="idLinkTyp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="auswahl" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="option" type="idLinkTyp" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
					<xsd:attribute name="werte" type="xsd:NMTOKENS"/>
					<xsd:attribute name="anzahl" type="xsd:positiveInteger" use="optional"/>
					<xsd:attribute name="modus">
						<xsd:annotation>
							<xsd:documentation xml:lang="DE">
								LISTE - In "wert"steht eine Liste von Werten, wobei jeder Wert einer "option" zugewiesen werden
									muß Es werden soviele optionen gewählt, wie es werte gibt. (Das attribut "anzahl" wird
									nicht benutzt)
								ANZAHL - In "wert" steht eine Zahl, die angibt wieviele der "optionen" gewählt werden müssen.
									Jede option kann einen Wert haben (über den "idLinkTyp"). (Das attribut "anzahl" wird
									nicht benutzt)
								VERTEILUNG - Der Wert in "wert" kann auf soviele der Optionen verteilt werden, wie im Attribut 
									"anzahl" angegeben. D.h. erst werden die Optionen ausgewählt, dann der "wert" beliebig auf 
									die gewählten optionen verteilt. (Siehe "Elfische Siedlung" S. 37 im AZ) 
							</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="LISTE"/>
								<xsd:enumeration value="ANZAHL"/>
								<xsd:enumeration value="VERTEILUNG"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ****************************************************************** -->
	<xsd:complexType name="auswahlGegenstandTyp">
			<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				fest - Alle Gegenstände innerhalb hat der Char ohne Wahlmöglichkeit
				auswahl - Pro auswahl können so viele Element gewählt werden, wie bei
					"anzahl" angegeben (default ist "1")
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="fest" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="gegenstand" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="auswahl" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="gegenstand" type="xsd:string"/>
					</xsd:sequence>
					<xsd:attribute name="anzahl" type="xsd:positiveInteger" use="optional"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!--************************************************************************************************************** -->
	<xsd:complexType name="voraussetzungTyp">
		<xsd:sequence>
			<xsd:element name="sonderf" type="auswahlTyp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eigenschaft" type="auswahlEigenschaftTyp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="talent" type="auswahlTyp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="zauber" type="auswahlTyp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="PA" type="xsd:positiveInteger" minOccurs="0"/>
			<xsd:element name="AT" type="xsd:positiveInteger" minOccurs="0"/>
			<xsd:element name="INI" type="xsd:positiveInteger" minOccurs="0"/>
			<!-- <xsd:element name=" -->
			<!-- Ritualkenntnis ist SF, Gaben sind VORTEILE! -->
		</xsd:sequence>
	</xsd:complexType>
	<!--****************************************************************************************************************** -->
	<xsd:complexType name="auswahlEigenschaftTyp">
		<xsd:sequence>
			<xsd:element name="fest" type="eigenschaftModiTyp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="auswahl" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="eigenschaft" type="eigenschaftTyp" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
					<xsd:attribute name="werte" type="xsd:NMTOKENS"/>
					<xsd:attribute name="anzahl" type="xsd:positiveInteger" use="optional"/>
					<xsd:attribute name="modus">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="LISTE"/>
								<xsd:enumeration value="ANZAHL"/>
								<xsd:enumeration value="VERTEILUNG"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!--****************************************************************************************************************** -->
	<xsd:complexType name="idLinkTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">

			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="text" type="xsd:string" use="optional"/>
		<xsd:attribute name="wert" type="xsd:int" use="optional"/>
		<xsd:attribute name="leitwert" type="xsd:boolean" use="optional"/>
		<xsd:attribute name="linkId" type="xsd:string" use="optional"/>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
		<!-- Verpflichtet der "Praios-Kirche", Vorurteile gegen "Orks" -->
		<!-- Eitelkeit Stufe 5 -->
		<!-- Für elfische Weltsicht -->
		<!-- Unbegabt für linkId -->
		<!-- normales "Ziel"-->
	</xsd:complexType>
	<xsd:complexType name="idListe">
		<xsd:sequence>
			<xsd:element name="linkId" type="idLinkTyp" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="ids" type="xsd:NMTOKENS" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="idUndWert">
		<xsd:attribute name="id" type="xsd:string" use="required"/>
		<xsd:attribute name="wert" type="xsd:int" use="required"/>
	</xsd:complexType>
	<!-- ************************************************************************************************************************** -->
	<!-- ***********************************                         Simple BasisTypen             ****************************** -->
	<!--**************************************************************************************************************************** -->
	<xsd:simpleType name="eigenschaftTyp">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="MU"/>
			<xsd:enumeration value="KL"/>
			<xsd:enumeration value="IN"/>
			<xsd:enumeration value="CH"/>
			<xsd:enumeration value="FF"/>
			<xsd:enumeration value="GE"/>
			<xsd:enumeration value="KO"/>
			<xsd:enumeration value="KK"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="kostenKlasseTyp">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="A"/>
			<xsd:enumeration value="B"/>
			<xsd:enumeration value="C"/>
			<xsd:enumeration value="D"/>
			<xsd:enumeration value="E"/>
			<xsd:enumeration value="F"/>
			<xsd:enumeration value="G"/>
			<xsd:enumeration value="H"/>
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>
