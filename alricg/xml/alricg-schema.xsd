<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Created on 17.12.2004
 *
 * This file is part of the project ALRICG. The file is copyright
 * protected an under the GNU licence.
 * For more information see "http://alricg.die3sphaere.de/".
 *
-->
<xsd:schema targetNamespace="http://www.die3sphaere.de/alricg" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.die3sphaere.de/alricg">
	<xsd:annotation>
		<xsd:documentation xml:lang="DE">
		Schema-file fuer ALRICG. Alle Daten aus der XML-Datenbasis können mit diesem File validiert werden.
		
		kommentar - Anmerkungen, die nur für Entwickler gedacht sind
		beschreibung - Text der für die Benutzer gedacht ist
		benoetigtDateien - Dateien, auf die DIESE Datei zugreift (wird auto. 
			erstellt)
		</xsd:documentation>
	</xsd:annotation>
	<xsd:element name="alricgXML">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="kommentar" type="xsd:string" minOccurs="0"/>
				<xsd:element name="beschreibung" type="xsd:string" minOccurs="0"/>
				<xsd:element name="autor" type="xsd:string" minOccurs="0"/>
				<xsd:element name="version" type="xsd:string" minOccurs="0"/>
				<xsd:element name="benoetigtDateien" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="datei" type="xsd:string" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="datenBasis" type="datenBasisTyp" minOccurs="0"/>
				<xsd:element name="rasse" type="rasseTyp" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="kultur" type="kulturTyp" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="profession" type="professionTyp" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="vorteil" type="vorteilType" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="nachteil" type="nachteilType" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="sondef" type="sondefType" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="talent" type="talentType" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="sprache" type="sprachType" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="schrift" type="schriftType" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="zauber" type="zauberType" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="liturgie" type="liturgieType" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="ritual" type="ritualType" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<!-- ############################################ RASSE ########################################### -->
	<xsd:complexType name="rasseTyp">
		<xsd:complexContent>
			<xsd:extension base="herkunftTyp">
				<xsd:sequence>
					<xsd:element name="kulturUeblich" type="idListe" minOccurs="0"/>
					<xsd:element name="kulturMoeglich" type="idListe" minOccurs="0"/>
					<xsd:element name="groesse">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="wuerfel" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:attribute name="anzWuerfel" type="xsd:positiveInteger" use="required"/>
										<xsd:attribute name="augenWuerfel" type="xsd:positiveInteger" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
							<xsd:attribute name="wert" type="xsd:positiveInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="gewichtModi">
						<xsd:complexType>
							<xsd:attribute name="wert" type="xsd:negativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="haarfarbe">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="farbe" maxOccurs="20">
									<xsd:complexType>
										<xsd:attribute name="farbe" type="xsd:string" use="required"/>
										<xsd:attribute name="wuerfelWurf" type="xsd:positiveInteger" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="augenfarbe">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="farbe" maxOccurs="20">
									<xsd:complexType>
										<xsd:attribute name="farbe" type="xsd:string" use="required"/>
										<xsd:attribute name="wuerfelWurf" type="xsd:positiveInteger" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ KULTUR ########################################### -->
	<xsd:complexType name="kulturTyp">
		<xsd:complexContent>
			<xsd:extension base="herkunftTyp">
				<xsd:sequence>
					<xsd:element name="professionUeblich" type="idListe" minOccurs="0"/>
					<xsd:element name="professionMoeglich" type="idListe" minOccurs="0"/>
					<xsd:element name="muttersprache" type="auswahlType"/>
					<xsd:element name="zweitsprache" type="auswahlType" minOccurs="0"/>
					<xsd:element name="sprachen" type="auswahlType" minOccurs="0"/>
					<xsd:element name="schriften" type="auswahlType" minOccurs="0"/>
					<!-- Bei Sprachen und schriften sind als ID auch erlaubt: "muttersprache" und "mutterspracheSchrift" -->
					<xsd:element name="ausruestung" type="xsd:string"  minOccurs="0"/>
					<!-- haben die Elfen -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ########################################## PROFESSION ######################################### -->
	<xsd:complexType name="professionTyp">
		<xsd:complexContent>
			<xsd:extension base="herkunftTyp">
				<xsd:sequence>
					<xsd:element name="art">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="handwerklich"/>
								<xsd:enumeration value="kriegerisch"/>
								<xsd:enumeration value="gesellschaftlich"/>
								<xsd:enumeration value="wildnis"/>
								<xsd:enumeration value="magisch"/>
								<xsd:enumeration value="geweiht"/>
								<xsd:enumeration value="schamanisch"/>
							</xsd:restriction>
						</xsd:simpleType>
						<!-- in erster Line für eine bessere Anordnung der Elemenet -->
					</xsd:element>
					<!-- Verbote sind nicht erlaubte Eigenschaften, die als Voraussetzung gelten -->
					<xsd:element name="verboteVT" type="idListe" minOccurs="0"/>
					<xsd:element name="verboteNT" type="idListe" minOccurs="0"/>
					<xsd:element name="verboteSF" type="idListe" minOccurs="0"/>
					<xsd:element name="sprachen" type="auswahlType" minOccurs="0"/>
					<xsd:element name="schriften" type="auswahlType" minOccurs="0"/>
					<xsd:element name="ausruestung" type="xsd:string"/>
					<xsd:element name="besondererBesitz" type="xsd:string" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="aufwand" use="optional">
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:enumeration value="zeitaufwendig"/>
							<xsd:enumeration value="erstprofession"/>
							<xsd:enumeration value="zusatzprofession"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Sonderfertigkeit ########################################### -->
	<!-- sammelbegriffe: ReprÃ¤sentation, Ritualkenntnis, Gabe -->
	<xsd:complexType name="sondefType">
		<xsd:complexContent>
			<xsd:extension base="fertigkeitTyp">
				<xsd:sequence>
					<xsd:element name="ap" type="apKostenTyp"/>
					<xsd:element name="art">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="waffenlosKampf"/>
								<xsd:enumeration value="bewaffnetKampf"/>
								<xsd:enumeration value="magisch"/>
								<xsd:enumeration value="geweiht"/>
								<xsd:enumeration value="schamanisch"/>
								<xsd:enumeration value="sonstige"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="voraussetzungen" type="voraussetzungType" minOccurs="0" maxOccurs="unbounded">
						<!-- Es muß nur EINE der Voraussetzungen gelten! (So werden die "oders" nachgebildet) -->
					</xsd:element>
					<!-- GP = (AP / 50) -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Vorteil ########################################### -->
	<xsd:complexType name="vorteilType">
		<xsd:complexContent>
			<xsd:extension base="fertigkeitTyp">
				<xsd:sequence>
					<xsd:element name="gp" type="xsd:nonNegativeInteger"/>
					<xsd:element name="istGabe" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="istMehrfachWaehlbar" type="xsd:boolean"/>
					<xsd:element name="minStufe" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:element name="maxStufe" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:element name="verbietetVorteil" type="idListe" minOccurs="0"/>
					<xsd:element name="verbietetNachteil" type="idListe" minOccurs="0"/>
					<xsd:element name="aendertApSf" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="aendertGpVorteil" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="aendertGpNachteil" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="voraussetzungen" type="voraussetzungType" minOccurs="0" maxOccurs="unbounded"/>
					<!-- Es muÃŸ nur EINE der Voraussetzungen gelten! (So werden die "oders" nachgebildet) -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Nachteil ########################################### -->
	<xsd:complexType name="nachteilType">
		<xsd:complexContent>
			<xsd:extension base="fertigkeitTyp">
				<xsd:sequence>
					<xsd:element name="gp" type="xsd:nonPositiveInteger"/>
					<xsd:element name="istSchlechteEigen" type="xsd:boolean"/>
					<xsd:element name="istMehrfachWaehlbar" type="xsd:boolean"/>
					<xsd:element name="minStufe" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:element name="maxStufe" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:element name="verbietetVorteil" type="idListe" minOccurs="0"/>
					<xsd:element name="verbietetNachteil" type="idListe" minOccurs="0"/>
					<xsd:element name="aendertApSf" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="aendertGpVorteil" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="aendertGpNachteil" type="idUndWert" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="voraussetzungen" type="voraussetzungType" minOccurs="0" maxOccurs="unbounded"/>
					<!-- Es muÃŸ nur EINE der Voraussetzungen gelten! (So werden die "oders" nachgebildet) -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Talent ########################################### -->
	<xsd:complexType name="talentType">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="art">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="basis"/>
								<xsd:enumeration value="spezial"/>
								<xsd:enumeration value="beruf"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="sorte">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="kampf"/>
								<xsd:enumeration value="koerper"/>
								<xsd:enumeration value="gesellschaft"/>
								<xsd:enumeration value="natur"/>
								<xsd:enumeration value="wissen"/>
								<xsd:enumeration value="handwerk"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="kostenKlasse" type="kostenKlasseType"/>
					<xsd:element name="eigenschaften" type="dreiEigenschaftenType"/>
					<xsd:element name="voraussetzungTalent" type="voraussetzungType" minOccurs="0" maxOccurs="unbounded"/>
					<!-- Es muÃŸ nur EINE der Voraussetzungen gelten! (So werden die "oders" nachgebildet) -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Sprache ########################################### -->
	<xsd:complexType name="sprachType">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="kostenKlasse" type="kostenKlasseType"/>
					<xsd:element name="komplexitaet" type="xsd:positiveInteger"/>
					<xsd:element name="komplexitaetMuttersprache" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:element name="schriftId" type="idListe"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Schrift ########################################### -->
	<xsd:complexType name="schriftType">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="kostenKlasse" type="kostenKlasseType"/>
					<xsd:element name="komplexitaet" type="xsd:positiveInteger"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Zauber ########################################### -->
	<xsd:complexType name="zauberType">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="kostenKlasse" type="kostenKlasseType"/>
					<xsd:element name="merkmale" type="magieMerkmaleType" maxOccurs="unbounded"/>
					<xsd:element name="verbreitung" maxOccurs="unbounded">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="repraesentation" type="repraesentationTyp"/>
								<xsd:element name="wert">
									<xsd:simpleType>
										<xsd:restriction base="xsd:positiveInteger">
											<xsd:maxInclusive value="7"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="eigenschaften" type="dreiEigenschaftenType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Liturgien ########################################### -->
	<xsd:complexType name="liturgieType">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="grad" type="kostenKlasseType"/>
					<xsd:element name="herkunft" type="xsd:string" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ############################################ Rituale ########################################### -->
	<xsd:complexType name="ritualType">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="grad" type="kostenKlasseType"/>
					<xsd:element name="herkunft" type="xsd:string" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ***************************************************************************************************************-->
	<!-- ***********************************                    VererbungsTypen              *************************** -->
	<!--**************************************************************************************************************** -->
	<xsd:complexType name="faehigkeitTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				Grundtype fuer alle Faehigkeiten (alles was ein Char waehlen kann)
				- Beschreibung: Allgemeine Beschreibung der Faehigkeit
				- regelAnmerkung: Eine Sammlung von Anmerkungen zu den Reglen,
					die das Programm nicht automatisch erledigen kann
				- sammelbegriff: Oberbegriffe (z.B. Zwerge) zur besseren Sortierung
				- sonderregel: Id zu einer Sonderregel
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="beschreibung" type="xsd:string" minOccurs="0"/>
			<xsd:element name="regelAnmerkung" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="regel" type="xsd:string"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="sammelbegriff" type="xsd:string" minOccurs="0"/>
			<!-- Seitenzahl -->
			<!-- Z.B. "Rituale" Zur besseren Ordnung gleichartiger Elemente -->
		</xsd:sequence>
		<xsd:attribute name="sonderRegel" type="xsd:string" use="optional"/>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
		<!-- FÃ¼r handling in Java -->
	</xsd:complexType>
	<!--***************************************************************************************************** -->
	<xsd:complexType name="fertigkeitTyp">
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:annotation>
					<xsd:documentation xml:lang="DE">
						Grundtype fuer alle Vor-/ Nachteil und SF
						Falls eine Fertigkeit mehrfach erlangt wird (durch Rasse, Kultur und Prof.):
						- additionsId: Eine "Familie" von Fertigkeiten, die zueinander 
							aufaddiert werden z.B. Rüstungsgewöhung I und RG II
						- additionsWert: z.B. Rüstungsgewöhung I = 1 und RG II = 2. Somit ergibt zwei mal
							RG I --> ein mal RG II (sieht AH S.10)
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name="additionsId" type="xsd:string" minOccurs="0"/>
					<xsd:element name="additionsWert" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="hatText" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="istWaehlbar" type="xsd:boolean"/>
					<xsd:element name="fuerWelcheChars" type="charArtenType" maxOccurs="6"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>	
	</xsd:complexType>
	<!--***************************************************************************************************** -->
	<xsd:complexType name="herkunftTyp">
		<xsd:annotation>
			<xsd:documentation xml:lang="DE">
				Grundtype fuer Rasse, Kultur, Profession
				varianteVon - Diese Herkunft ist eine Variante einer anderen
				kannGewaehltWerden - Kann die Herkunft nicht gewählt werden,
					so handelt es sich um einen "Varianten Rumpf", also einen
					"Vater" von Varianten, der aber selbst nicht wählbar ist.
					Default: true
				geschlecht - Diese Herkunft ist nur für ein bestimmtes Geschlecht
					möglich
					Default: MW (Also beide Geschlechter)
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="faehigkeitTyp">
				<xsd:sequence>
					<xsd:element name="gp" type="xsd:nonNegativeInteger"/>
					<xsd:element name="varianteVon" type="xsd:string" minOccurs="0"/>
					<xsd:element name="kannGewaehltWerden" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="geschlecht" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="M"/>
								<xsd:enumeration value="W"/>
								<xsd:enumeration value="MW"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="lepModi" type="xsd:int" minOccurs="0"/>
					<xsd:element name="aupModi" type="xsd:int" minOccurs="0"/>
					<xsd:element name="aspModi" type="xsd:int" minOccurs="0"/>
					<xsd:element name="kaModi" type="xsd:int" minOccurs="0"/>
					<xsd:element name="mrModi" type="xsd:int" minOccurs="0"/>
					<xsd:element name="soMin" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="soMax" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="soModi" type="xsd:int" minOccurs="0"/>
					<xsd:element name="eigenschaftModi" type="auswahlEigenschaftType" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="eigenschaftVoraussetzung" type="auswahlEigenschaftType" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="vorteile" type="auswahlType" minOccurs="0"/>
					<xsd:element name="nachteile" type="auswahlType" minOccurs="0"/>
					<xsd:element name="sonderf" type="auswahlType" minOccurs="0"/>
					<xsd:element name="liturgien" type="auswahlType" minOccurs="0"/>
					<xsd:element name="rituale" type="auswahlType" minOccurs="0"/>
					<xsd:element name="empfVorteile" type="idListe" minOccurs="0"/>
					<xsd:element name="empfNachteile" type="idListe" minOccurs="0"/>
					<xsd:element name="ungeVorteile" type="idListe" minOccurs="0"/>
					<xsd:element name="ungeNachteile" type="idListe" minOccurs="0"/>
					<!-- <xsd:element name="verbilligteVorteile" type="auswahlType" minOccurs="0"/>
					<xsd:element name="verbilligteNachteile" type="auswahlType" minOccurs="0"/> -->
					<xsd:element name="verbilligteSonderf" type="idListe" minOccurs="0"/>
					<xsd:element name="verbilligteLiturgien" type="idListe" minOccurs="0"/>
					<xsd:element name="verbilligteRituale" type="idListe" minOccurs="0"/>
					<xsd:element name="talente" type="auswahlType" minOccurs="0"/>
					<xsd:element name="hauszauber" type="auswahlType" minOccurs="0"/>
					<xsd:element name="zauber" type="auswahlType" minOccurs="0"/>
					<xsd:element name="aktivierbareZauber" type="idListe" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ************************************************************************************************************* -->
	<!-- ***********************************                  BasisTypen           *********************************** -->
	<!--************************************************************************************************************** -->
	<xsd:complexType name="dreiEigenschaftenType">
		<xsd:attribute name="eigen1" type="eigenschaftType" use="required"/>
		<xsd:attribute name="eigen2" type="eigenschaftType" use="required"/>
		<xsd:attribute name="eigen3" type="eigenschaftType" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="eigenschaftModiType">
		<xsd:attribute name="eigenschaft" type="eigenschaftType" use="required"/>
		<xsd:attribute name="wert" type="xsd:int" use="required"/>
		<xsd:attribute name="maximum" type="xsd:boolean" use="optional"/>
		<!-- Bei voraussetzungen wichtig: Ist das Wert ein Minimum (default) oder maximum!-->
	</xsd:complexType>
	<!--********************************************************************************************************* -->
	<xsd:complexType name="auswahlType">
		<xsd:sequence>
			<xsd:element name="fest" type="idLinkTyp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="auswahl" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="option" type="idLinkTyp" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
					<xsd:attribute name="werte" type="xsd:NMTOKENS"/>
					<xsd:attribute name="anzahl" type="xsd:positiveInteger" use="optional"/>
					<xsd:attribute name="modus">
						<xsd:annotation>
							<xsd:documentation xml:lang="DE">
								LISTE - In "wert"steht eine Liste von Werten, wobei jeder Wert einer "option" zugewiesen werden
									muß. Es werden soviele optionen gewählt, wie es werte gibt. (Das attribut "anzahl" wird
									nicht benutzt)
								ANZAHL - In "wert" steht eine Zahl, die angibt wieviele der "optionen" gewÃ¤hlt werden müssen.
									Jede option kann einen Wert haben (Ã¼ber den "idLinkTyp"). (Das attribut "anzahl" wird
									nicht benutzt)
								VERTEILUNG - Der Wert in "wert" kann auf soviele der Optionen verteilt werden, wie im Attribut 
									"anzahl" angegeben. D.h. erst werden die Optionen ausgewählt, dann der "wert" beliebig auf 
									die gewÃ¤hlten optionen verteilt. (Siehe "Elfische Siedlung" S. 37 im AZ) 
							</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="LISTE"/>
								<xsd:enumeration value="ANZAHL"/>
								<xsd:enumeration value="VERTEILUNG"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!--************************************************************************************************************** -->
	<xsd:complexType name="voraussetzungType">
		<xsd:sequence>
			<xsd:element name="sonderf" type="auswahlType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eigenschaft" type="auswahlEigenschaftType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="talent" type="auswahlType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="zauber" type="auswahlType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="PA" type="xsd:positiveInteger" minOccurs="0"/>
			<xsd:element name="AT" type="xsd:positiveInteger" minOccurs="0"/>
			<xsd:element name="INI" type="xsd:positiveInteger" minOccurs="0"/>
			<!-- <xsd:element name=" -->
			<!-- Ritualkenntnis und Gaben sind Sonderfertigkeiten! -->
		</xsd:sequence>
	</xsd:complexType>
	<!--****************************************************************************************************************** -->
	<xsd:complexType name="auswahlEigenschaftType">
		<xsd:sequence>
			<xsd:element name="fest" type="eigenschaftModiType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="auswahl" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="eigenschaft" type="eigenschaftType" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
					<xsd:attribute name="werte" type="xsd:NMTOKENS"/>
					<xsd:attribute name="anzahl" type="xsd:positiveInteger" use="optional"/>
					<xsd:attribute name="modus">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="LISTE"/>
								<xsd:enumeration value="ANZAHL"/>
								<xsd:enumeration value="VERTEILUNG"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!--******************************************************************************************************************** -->
	<xsd:complexType name="apKostenTyp">
		<xsd:sequence>
			<xsd:element name="modi" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="prioritaet" type="xsd:nonNegativeInteger" use="optional"/>
					<xsd:attribute name="id" type="xsd:nonNegativeInteger" use="required"/>
					<xsd:attribute name="kostenAP" type="xsd:nonNegativeInteger" use="required"/>
					<xsd:attribute name="kostenGP" type="xsd:nonNegativeInteger" use="optional"/>
					<!-- Falls mehrere modis existieren -->
					<!-- Der SF / Vor-/Nachteil -->
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="gp" type="xsd:nonNegativeInteger" use="optional"/>
		<xsd:attribute name="ap" type="xsd:nonNegativeInteger" use="required"/>
		<!-- Normalerweise unnÃ¶tig, da gp = (ap / 50) -->
	</xsd:complexType>
	<!--****************************************************************************************************************** -->
	<xsd:complexType name="idLinkTyp">
		<xsd:attribute name="text" type="xsd:string" use="optional"/>
		<xsd:attribute name="wert" type="xsd:int" use="optional"/>
		<xsd:attribute name="leitwert" type="xsd:boolean" use="optional"/>
		<xsd:attribute name="linkId" type="xsd:string" use="optional"/>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
		<!-- Verpflichtet der "Praios-Kirche", Vorurteile gegen "Orks" -->
		<!-- Eitelkeit Stufe 5 -->
		<!-- FÃ¼r elfische Weltsicht -->
		<!-- Unbegabt fï¿½linkId -->
		<!-- normales "Ziel"-->
	</xsd:complexType>
	<xsd:complexType name="idListe">
		<xsd:sequence>
			<xsd:element name="linkId" type="idLinkTyp" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="ids" type="xsd:NMTOKENS" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="idUndWert">
		<xsd:attribute name="id" type="xsd:string" use="required"/>
		<xsd:attribute name="wert" type="xsd:int" use="required"/>
	</xsd:complexType>
	<!-- ************************************************************************************************************************** -->
	<!-- ***********************************                         Simple BasisTypen             ****************************** -->
	<!--**************************************************************************************************************************** -->
	<xsd:simpleType name="eigenschaftType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="MU"/>
			<xsd:enumeration value="KL"/>
			<xsd:enumeration value="IN"/>
			<xsd:enumeration value="CH"/>
			<xsd:enumeration value="FF"/>
			<xsd:enumeration value="GE"/>
			<xsd:enumeration value="KO"/>
			<xsd:enumeration value="KK"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="kostenKlasseType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="A"/>
			<xsd:enumeration value="B"/>
			<xsd:enumeration value="C"/>
			<xsd:enumeration value="D"/>
			<xsd:enumeration value="E"/>
			<xsd:enumeration value="F"/>
			<xsd:enumeration value="G"/>
			<xsd:enumeration value="H"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="liturgieHerkunftType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="allgemein"/>
			<xsd:enumeration value="zwölfgötter"/>
			<xsd:enumeration value="praios"/>
			<xsd:enumeration value="rondra"/>
			<xsd:enumeration value="efferd"/>
			<xsd:enumeration value="travia"/>
			<xsd:enumeration value="boron"/>
			<xsd:enumeration value="hesinde"/>
			<xsd:enumeration value="firun"/>
			<xsd:enumeration value="tsa"/>
			<xsd:enumeration value="phex"/>
			<xsd:enumeration value="peraine"/>
			<xsd:enumeration value="ingerimm"/>
			<xsd:enumeration value="rahja"/>
			<xsd:enumeration value="aves"/>
			<xsd:enumeration value="kor"/>
			<xsd:enumeration value="nandus"/>
			<xsd:enumeration value="ifirn"/>
			<xsd:enumeration value="horas"/>
			<xsd:enumeration value="swafnir"/>
			<xsd:enumeration value="angrosch"/>
			<xsd:enumeration value="h'szint"/>
			<xsd:enumeration value="zsahh"/>
			<xsd:enumeration value="tairach"/>
			<xsd:enumeration value="gravesh"/>
			<xsd:enumeration value="rikai"/>
			<xsd:enumeration value="kamaluqs"/>
			<xsd:enumeration value="himmelswï¿½"/>
			<xsd:enumeration value="sonstiges"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="repraesentationTyp">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="gildenmagier"/>
			<xsd:enumeration value="elfen"/>
			<xsd:enumeration value="druide"/>
			<xsd:enumeration value="hexen"/>
			<xsd:enumeration value="geode"/>
			<xsd:enumeration value="schelme"/>
			<xsd:enumeration value="scharlatane"/>
			<xsd:enumeration value="borbaradianer"/>
			<xsd:enumeration value="kristallomant"/>
			<xsd:enumeration value="alchemist"/>
			<xsd:enumeration value="derwisch"/>
			<xsd:enumeration value="gjalsker"/>
			<xsd:enumeration value="darna"/>
			<xsd:enumeration value="sharisad (tulamidisch)"/>
			<xsd:enumeration value="sharisad (novadisch)"/>
			<xsd:enumeration value="sharisad (zahorisch)"/>
			<xsd:enumeration value="sharisad (aranisch)"/>
			<xsd:enumeration value="zibilja"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="magieMerkmaleType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="antimagie"/>
			<xsd:enumeration value="beschwoerung"/>
			<xsd:enumeration value="daemonisch (blakharaz)"/>
			<xsd:enumeration value="daemonisch (belhalhar)"/>
			<xsd:enumeration value="daemonisch (charyptoroth)"/>
			<xsd:enumeration value="daemonisch (lolgramoth)"/>
			<xsd:enumeration value="daemonisch (thargunitoth)"/>
			<xsd:enumeration value="daemonisch (amazeroth)"/>
			<xsd:enumeration value="daemonisch (belshirash)"/>
			<xsd:enumeration value="daemonisch (asfaloth)"/>
			<xsd:enumeration value="daemonisch (tasfarelel)"/>
			<xsd:enumeration value="daemonisch (belzhorash)"/>
			<xsd:enumeration value="daemonisch (agrimoth)"/>
			<xsd:enumeration value="daemonisch (belkelel)"/>
			<xsd:enumeration value="eigenschaften"/>
			<xsd:enumeration value="einfluss"/>
			<xsd:enumeration value="elementar (feuer)"/>
			<xsd:enumeration value="elementar (wasser)"/>
			<xsd:enumeration value="elementar (luft)"/>
			<xsd:enumeration value="elementar (erz)"/>
			<xsd:enumeration value="elementar (humus)"/>
			<xsd:enumeration value="elementar (eis)"/>
			<xsd:enumeration value="form"/>
			<xsd:enumeration value="geisterwesen"/>
			<xsd:enumeration value="heilung"/>
			<xsd:enumeration value="hellsicht"/>
			<xsd:enumeration value="herbeirufung"/>
			<xsd:enumeration value="herrschaft"/>
			<xsd:enumeration value="illusion"/>
			<xsd:enumeration value="kraft"/>
			<xsd:enumeration value="limbus"/>
			<xsd:enumeration value="metamagie"/>
			<xsd:enumeration value="objekt"/>
			<xsd:enumeration value="schaden"/>
			<xsd:enumeration value="telekinese"/>
			<xsd:enumeration value="temporal"/>
			<xsd:enumeration value="umwelt"/>
			<xsd:enumeration value="verstaendigung"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="charArtenType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="alle"/>
			<xsd:enumeration value="nichtMagisch"/>
			<xsd:enumeration value="vollZauberer"/>
			<xsd:enumeration value="halbZauberer"/>
			<xsd:enumeration value="viertelZauberer"/>
			<xsd:enumeration value="geweiht"/>
			<xsd:enumeration value="borbaradianer"/>
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>
